@model Foosball.Web.Models.PlayerDetailsViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Player.DisplayName</h2>


<ul id="tabs" class="nav nav-tabs" data-tabs="tabs">
    <li class="active"><a href="#ratingHistory" data-toggle="tab">Rating History</a></li>
    <li id="resultsTabItem"><a href="#results" data-toggle="tab">Results</a></li>
</ul>
<div class="tab-content">
    <div class="tab-pane active" id="ratingHistory">
        <div class="demo-container">
            <div class="demo-placeholder" id="ratingChart"></div>
        </div>
    </div>
    <div class="tab-pane" id="results">
        <div id="resultsGrid" style="height: 450px"></div>
    </div>
</div>

<script>
    $(function () {
        loadResultHistoryChart();
        $('#resultsTabItem').click(function() {
            loadResults();
        });
    });

    function loadResultHistoryChart() {
        var ratingData = @Model.ChartData;
        $.plot("#ratingChart", [{
            data: ratingData,
            color: 'darkgreen',
            lines: { show: true },
            points: { show: true, radius: 3 }
        }],
        {
            xaxis: {
                ticks: 25,
                tickDecimals: 0
            },
            yaxis: {
                ticks: 10,
                tickDecimals: 0
            },
        });
    }

    function loadResults() {
        $('#resultsGrid').w2grid({
            name: 'resultsGrid',
            url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "PlayerGamesGrid", id = Model.Player.Id })',
            autoLoad: true,
            limit: 500,
            msgRefresh: 'Loading',
            show: {
                toolbar: false,
                footer: false,
                toolbarSave: false,
                toolbarDelete: false,
                toolbarSearch: false,
                toolbarReload: false,
                toolbarColumns: false
            },
            columns: [
                {
                    field: 'GridTimestamp',
                    caption: 'Timestamp',
                    size: '20%',
                    sortable: false,
                    resizable: true,
                    render: 'text'
                },
                {
                    field: 'Summary',
                    caption: 'Summary',
                    size: '50%',
                    sortable: false,
                    resizable: true,
                    render: 'text'
                },
                {
                    caption: 'Winner Rating',
                    size: '15%',
                    sortable: false,
                    resizable: true,
                    render: function (record) {
                        return record.WinnerRating + ' (+' + record.WinnerDelta + ')';
                    }
                },
                {
                    caption: 'Loser Rating',
                    size: '15%',
                    sortable: false,
                    resizable: true,
                    render: function (record) {
                        return record.LoserRating + ' <span style="color: red;">(' + record.LoserDelta + ')</span>';
                    }
                }
            ]
        });
    }
</script>